{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_interacteduser.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\user\\user.controller.js:2475:61\n\n  2472   });\n  2473 }\n  2474 \n→ 2475 const interactions = await prisma.doctor_interacteduser.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in doctorafterconsult API","timestamp":"2024-10-07T12:31:57.221Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.user_details.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\user\\user.controller.js:702:51\n\n  699     message: \"User id null!\",\n  700   });\n  701 }\n→ 702 const userDetails = await prisma.user_details.findFirst(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in getprofile API","timestamp":"2024-10-07T12:31:57.255Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:416:50\n\n  413   });\n  414 }\n  415 \n→ 416 const cartItems = await prisma.customer_cart.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in getCart API","timestamp":"2024-10-07T12:31:57.258Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.update()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\doctor\\doctor.controller.js:365:35\n\n  362     : 0;\n  363 \n  364 // Update the doctor's rating in the doctor_details table\n→ 365 await prisma.doctor_details.update(\nServer has closed the connection. in get_doctors API","timestamp":"2024-10-10T09:15:36.586Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.count()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\admin\\admin.controller.js:1136:29\n\n  1133     status: \"Y\",\n  1134   },\n  1135 }),\n→ 1136 prisma.doctor_details.count(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in admin-totalCount API","timestamp":"2024-10-14T05:32:26.126Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.count()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\admin\\admin.controller.js:1126:29\n\n  1123   hsdisabledCount,\n  1124   hsallCount,\n  1125 ] = await Promise.all([\n→ 1126   prisma.doctor_details.count(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in admin-totalCount API","timestamp":"2024-10-14T06:59:32.475Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_feedback.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\doctor\\doctor.controller.js:325:54\n\n  322 };\n  323 \n  324 // Fetch feedback for the doctor\n→ 325 const feedbacks = await prisma.doctor_feedback.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in get_doctors API","timestamp":"2024-10-14T11:32:47.265Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: \"BABY CARE\"\n                     ~~~~~~~~~~~\n         }\n       })\n\nArgument `category`: Invalid value provided. Expected JsonNullableFilter, provided String. in product-addcategory API","timestamp":"2024-10-16T07:36:13.744Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: {\n             contains: \"BABY CARE\",\n             ~~~~~~~~\n       ?     equals?: Json | JsonFieldRefInput | JsonNullValueFilter,\n       ?     path?: String[],\n       ?     string_contains?: String | StringFieldRefInput,\n       ?     string_starts_with?: String | StringFieldRefInput,\n       ?     string_ends_with?: String | StringFieldRefInput,\n       ?     array_contains?: Json | JsonFieldRefInput | Null,\n       ?     array_starts_with?: Json | JsonFieldRefInput | Null,\n       ?     array_ends_with?: Json | JsonFieldRefInput | Null,\n       ?     lt?: Json | JsonFieldRefInput,\n       ?     lte?: Json | JsonFieldRefInput,\n       ?     gt?: Json | JsonFieldRefInput,\n       ?     gte?: Json | JsonFieldRefInput,\n       ?     not?: Json | JsonFieldRefInput | JsonNullValueFilter\n           }\n         }\n       })\n\nUnknown argument `contains`. Available options are marked with ?. in product-addcategory API","timestamp":"2024-10-16T07:39:16.187Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: {\n             has: \"BABY CARE\",\n             ~~~\n       ?     equals?: Json | JsonFieldRefInput | JsonNullValueFilter,\n       ?     path?: String[],\n       ?     string_contains?: String | StringFieldRefInput,\n       ?     string_starts_with?: String | StringFieldRefInput,\n       ?     string_ends_with?: String | StringFieldRefInput,\n       ?     array_contains?: Json | JsonFieldRefInput | Null,\n       ?     array_starts_with?: Json | JsonFieldRefInput | Null,\n       ?     array_ends_with?: Json | JsonFieldRefInput | Null,\n       ?     lt?: Json | JsonFieldRefInput,\n       ?     lte?: Json | JsonFieldRefInput,\n       ?     gt?: Json | JsonFieldRefInput,\n       ?     gte?: Json | JsonFieldRefInput,\n       ?     not?: Json | JsonFieldRefInput | JsonNullValueFilter\n           }\n         }\n       })\n\nUnknown argument `has`. Did you mean `path`? Available options are marked with ?. in product-addcategory API","timestamp":"2024-10-16T07:43:53.428Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:186:58\n\n  183 \n  184 if (check) {\n  185   // Check if there are products associated with this category\n→ 186   const checkcategory = await prisma.generic_product.findFirst({\n          where: {\n            category: \"ALOE VERAA\"\n                      ~~~~~~~~~~~~\n          }\n        })\n\nArgument `category`: Invalid value provided. Expected JsonNullableFilter, provided String. in product-deletecategory API","timestamp":"2024-10-16T07:45:27.146Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-17T16:23:55.399Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.sales_order.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:559:60\n\n  556 const so_num = \"SO\";\n  557 const startOfYear = new Date(new Date().getFullYear(), 0, 1);\n  558 const endOfYear = new Date(new Date().getFullYear() + 1, 0, 1);\n→ 559 const existingsalesOrders = await prisma.sales_order.findMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:22:03.387Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.deleteMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:618:36\n\n  615   });\n  616 }\n  617 \n→ 618 await prisma.customer_cart.deleteMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:25:59.386Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.deleteMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:618:36\n\n  615   });\n  616 }\n  617 \n→ 618 await prisma.customer_cart.deleteMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:26:02.949Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.sales_list.create()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:599:35\n\n  596 for (let product of products) {\n  597   const net_amount = parseInt(product.quantity) * parseInt(product.mrp);\n  598 \n→ 599   await prisma.sales_list.create(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:26:13.423Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:57:25.318Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:57:26.368Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:59:42.449Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T07:00:29.743Z"}
{"level":"error","message":"Internal server error: prisma.chat_data.find is not a function in admin-getchatdata api","timestamp":"2024-10-19T06:02:14.781Z"}
{"level":"error","message":"Internal server error: prisma.chat_data.find is not a function in admin-getchatdata api","timestamp":"2024-10-19T06:02:14.792Z"}
{"level":"error","message":"Internal server error: processHospitalData is not defined in getunapproveuser API","timestamp":"2024-10-21T08:00:24.905Z"}
{"level":"error","message":"Internal server error: processHospitalData is not defined in getunapproveuser API","timestamp":"2024-10-21T08:00:29.044Z"}

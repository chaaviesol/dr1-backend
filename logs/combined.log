{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:15.165Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:15.211Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:19.625Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:19.660Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:55.183Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:11:55.218Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:12:21.466Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:12:21.836Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:12:43.509Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:12:43.541Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:13:55.387Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:13:55.429Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:18.140Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:18.181Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:19.551Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:20.370Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:46.707Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:15:46.744Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:16:09.388Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:16:09.421Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:17:29.645Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:17:29.685Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:36:53.381Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:36:53.429Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:39:08.471Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T09:39:08.507Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T11:02:36.181Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-07T11:02:36.728Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_interacteduser.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\user\\user.controller.js:2475:61\n\n  2472   });\n  2473 }\n  2474 \n→ 2475 const interactions = await prisma.doctor_interacteduser.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in doctorafterconsult API","timestamp":"2024-10-07T12:31:57.221Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.user_details.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\user\\user.controller.js:702:51\n\n  699     message: \"User id null!\",\n  700   });\n  701 }\n→ 702 const userDetails = await prisma.user_details.findFirst(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in getprofile API","timestamp":"2024-10-07T12:31:57.255Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:416:50\n\n  413   });\n  414 }\n  415 \n→ 416 const cartItems = await prisma.customer_cart.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in getCart API","timestamp":"2024-10-07T12:31:57.258Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T05:25:46.996Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T05:25:57.460Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T05:26:01.072Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:15.491Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:15.538Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:16.131Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:16.169Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:34.565Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:46:34.606Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:48:08.243Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:48:08.888Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:54:30.041Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T06:54:30.898Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:01:58.052Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:01:58.981Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:03:10.311Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:03:11.053Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:05:20.777Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:05:21.514Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:22:32.808Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:22:33.577Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:30:14.481Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:30:14.575Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:36:05.843Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:36:06.583Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:40:21.830Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:40:22.404Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:42:43.812Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-09T07:42:44.546Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:54:57.887Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:54:59.007Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:54:59.062Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:54:59.504Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:21.573Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:22.388Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:31.507Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:32.371Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:49.673Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:55:50.604Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:57:14.499Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T06:57:14.745Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:00:35.651Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:00:35.873Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:00:42.029Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:00:43.085Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:04:45.688Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:04:45.874Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:06:47.767Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:06:47.944Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:07:24.115Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:07:24.274Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:11:24.298Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:11:24.520Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:11:56.898Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:11:57.039Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:14:52.729Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:14:52.870Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:16:42.406Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:16:42.574Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:23:51.084Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:23:51.180Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:24:34.015Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:24:34.174Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:25:33.585Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:25:34.082Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:28:37.969Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:28:38.129Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:36:49.201Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:36:49.889Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:39:36.966Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:39:37.122Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:41:46.745Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:41:46.780Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:43:20.234Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:43:20.726Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:47:15.953Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:47:15.991Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:48:25.017Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:48:25.465Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:48:58.090Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:48:58.132Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:00.089Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:00.962Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:41.341Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:41.476Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:55.060Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:50:55.102Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:52:59.519Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:52:59.662Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:54:34.767Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:54:34.934Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:55:11.818Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:55:11.865Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:55:33.099Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-10T07:55:33.248Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.update()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\doctor\\doctor.controller.js:365:35\n\n  362     : 0;\n  363 \n  364 // Update the doctor's rating in the doctor_details table\n→ 365 await prisma.doctor_details.update(\nServer has closed the connection. in get_doctors API","timestamp":"2024-10-10T09:15:36.586Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:19:26.243Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:19:27.259Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:19:29.288Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:19:33.354Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:26:12.186Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:26:13.218Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-10T09:26:15.243Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:35:31.130Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:35:31.169Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:35:31.878Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:35:32.182Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:36:08.231Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:36:09.063Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:42:22.492Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:42:22.541Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:43:49.254Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:43:49.296Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:47:20.317Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:47:20.996Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:47:48.803Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:47:50.245Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:49:46.825Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:49:47.581Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:55:45.654Z"}
{"level":"info","message":"checkinggg","timestamp":"2024-10-11T08:55:45.691Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.count()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\admin\\admin.controller.js:1136:29\n\n  1133     status: \"Y\",\n  1134   },\n  1135 }),\n→ 1136 prisma.doctor_details.count(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in admin-totalCount API","timestamp":"2024-10-14T05:32:26.126Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_details.count()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\admin\\admin.controller.js:1126:29\n\n  1123   hsdisabledCount,\n  1124   hsallCount,\n  1125 ] = await Promise.all([\n→ 1126   prisma.doctor_details.count(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in admin-totalCount API","timestamp":"2024-10-14T06:59:32.475Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.doctor_feedback.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\doctor\\doctor.controller.js:325:54\n\n  322 };\n  323 \n  324 // Fetch feedback for the doctor\n→ 325 const feedbacks = await prisma.doctor_feedback.findMany(\nCan't reach database server at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `doconerecoveredsept25.c5qcaqeqc4di.ap-south-1.rds.amazonaws.com`:`5432`. in get_doctors API","timestamp":"2024-10-14T11:32:47.265Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: \"BABY CARE\"\n                     ~~~~~~~~~~~\n         }\n       })\n\nArgument `category`: Invalid value provided. Expected JsonNullableFilter, provided String. in product-addcategory API","timestamp":"2024-10-16T07:36:13.744Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: {\n             contains: \"BABY CARE\",\n             ~~~~~~~~\n       ?     equals?: Json | JsonFieldRefInput | JsonNullValueFilter,\n       ?     path?: String[],\n       ?     string_contains?: String | StringFieldRefInput,\n       ?     string_starts_with?: String | StringFieldRefInput,\n       ?     string_ends_with?: String | StringFieldRefInput,\n       ?     array_contains?: Json | JsonFieldRefInput | Null,\n       ?     array_starts_with?: Json | JsonFieldRefInput | Null,\n       ?     array_ends_with?: Json | JsonFieldRefInput | Null,\n       ?     lt?: Json | JsonFieldRefInput,\n       ?     lte?: Json | JsonFieldRefInput,\n       ?     gt?: Json | JsonFieldRefInput,\n       ?     gte?: Json | JsonFieldRefInput,\n       ?     not?: Json | JsonFieldRefInput | JsonNullValueFilter\n           }\n         }\n       })\n\nUnknown argument `contains`. Available options are marked with ?. in product-addcategory API","timestamp":"2024-10-16T07:39:16.187Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:37:60\n\n  34 \n  35 if (check.category !== upr_category) {\n  36   console.log(\"heyyyyyyyyy\");\n→ 37   const checkcategory = await prisma.generic_product.findFirst({\n         where: {\n           category: {\n             has: \"BABY CARE\",\n             ~~~\n       ?     equals?: Json | JsonFieldRefInput | JsonNullValueFilter,\n       ?     path?: String[],\n       ?     string_contains?: String | StringFieldRefInput,\n       ?     string_starts_with?: String | StringFieldRefInput,\n       ?     string_ends_with?: String | StringFieldRefInput,\n       ?     array_contains?: Json | JsonFieldRefInput | Null,\n       ?     array_starts_with?: Json | JsonFieldRefInput | Null,\n       ?     array_ends_with?: Json | JsonFieldRefInput | Null,\n       ?     lt?: Json | JsonFieldRefInput,\n       ?     lte?: Json | JsonFieldRefInput,\n       ?     gt?: Json | JsonFieldRefInput,\n       ?     gte?: Json | JsonFieldRefInput,\n       ?     not?: Json | JsonFieldRefInput | JsonNullValueFilter\n           }\n         }\n       })\n\nUnknown argument `has`. Did you mean `path`? Available options are marked with ?. in product-addcategory API","timestamp":"2024-10-16T07:43:53.428Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.generic_product.findFirst()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\productcategory\\productcategory.js:186:58\n\n  183 \n  184 if (check) {\n  185   // Check if there are products associated with this category\n→ 186   const checkcategory = await prisma.generic_product.findFirst({\n          where: {\n            category: \"ALOE VERAA\"\n                      ~~~~~~~~~~~~\n          }\n        })\n\nArgument `category`: Invalid value provided. Expected JsonNullableFilter, provided String. in product-deletecategory API","timestamp":"2024-10-16T07:45:27.146Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:27:52.965Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:42.229Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:44.277Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:48.325Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:53.271Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:54.384Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:40:56.566Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:41:18.642Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:45:02.545Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:45:03.624Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:45:05.639Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:45:09.670Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:47:31.153Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:47:32.213Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:47:34.227Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:47:38.239Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:48:31.284Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:48:32.545Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:48:34.568Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:03.025Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:13.443Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:14.567Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:16.581Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:20.610Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:49:59.154Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:50:00.344Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:50:02.398Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-16T10:50:06.450Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-17T16:23:55.399Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.sales_order.findMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:559:60\n\n  556 const so_num = \"SO\";\n  557 const startOfYear = new Date(new Date().getFullYear(), 0, 1);\n  558 const endOfYear = new Date(new Date().getFullYear() + 1, 0, 1);\n→ 559 const existingsalesOrders = await prisma.sales_order.findMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:22:03.387Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.deleteMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:618:36\n\n  615   });\n  616 }\n  617 \n→ 618 await prisma.customer_cart.deleteMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:25:59.386Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.customer_cart.deleteMany()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:618:36\n\n  615   });\n  616 }\n  617 \n→ 618 await prisma.customer_cart.deleteMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:26:02.949Z"}
{"level":"error","message":"Internal server error: \nInvalid `prisma.sales_list.create()` invocation in\nC:\\Users\\dell\\Desktop\\doc_be_newrepo\\dr1-backend\\routes\\pharmacy\\pharmacy.controller.js:599:35\n\n  596 for (let product of products) {\n  597   const net_amount = parseInt(product.quantity) * parseInt(product.mrp);\n  598 \n→ 599   await prisma.sales_list.create(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in salesorder API","timestamp":"2024-10-18T05:26:13.423Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:57:25.318Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:57:26.368Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T06:59:42.449Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-18T07:00:29.743Z"}
{"level":"error","message":"Internal server error: prisma.chat_data.find is not a function in admin-getchatdata api","timestamp":"2024-10-19T06:02:14.781Z"}
{"level":"error","message":"Internal server error: prisma.chat_data.find is not a function in admin-getchatdata api","timestamp":"2024-10-19T06:02:14.792Z"}
{"level":"error","message":"Internal server error: processHospitalData is not defined in getunapproveuser API","timestamp":"2024-10-21T08:00:24.905Z"}
{"level":"error","message":"Internal server error: processHospitalData is not defined in getunapproveuser API","timestamp":"2024-10-21T08:00:29.044Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:34.848Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:35.873Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:37.886Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:41.896Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:57.228Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:47:58.270Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:48:34.365Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:49:27.508Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:49:32.612Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:49:33.929Z"}
{"level":"error","message":"user_id is undefined in getCart API","timestamp":"2024-10-21T09:49:35.945Z"}

name: Notify on Completion
description: Sends a Telegram message on job completion
inputs:
  step_checkout_status:
    description: "Status of checkout step"
    required: true
  step_clone_repo_status:
    description: "Status of clone_repo step"
    required: true
  step_cleanup_status:
    description: "Status of cleanup step"
    required: true
  telegram_chat_ids:
    description: "Telegram chat IDs"
    required: true
  telegram_bot_token:
    description: "Telegram bot token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Debug Notification Inputs
      shell: bash
      run: |
        CHECKOUT_STATUS="${{ inputs.step_checkout_status }}"
        CLONE_REPO_STATUS="${{ inputs.step_clone_repo_status }}"
        CLEANUP_STATUS="${{ inputs.step_cleanup_status }}"

        echo "Checkout Status: $CHECKOUT_STATUS"
        echo "Clone Repo Status: $CLONE_REPO_STATUS"
        echo "Cleanup Status: $CLEANUP_STATUS"

        # Define the success and failure messages
        if [[ "$CHECKOUT_STATUS" == "success" && "$CLONE_REPO_STATUS" == "success" && "$CLEANUP_STATUS" == "success" ]]; then
  MESSAGE=$(printf "ðŸŽ‰ *Build Succeeded* \n*Checkout Step*: %s\n*Clone Repo Step*: %s\n*Cleanup Step*: %s" "$CHECKOUT_STATUS" "$CLONE_REPO_STATUS" "$CLEANUP_STATUS")
else
  MESSAGE=$(printf "ðŸš¨ *Build Failed* \n*Checkout Step*: %s\n*Clone Repo Step*: %s\n*Cleanup Step*: %s" "$CHECKOUT_STATUS" "$CLONE_REPO_STATUS" "$CLEANUP_STATUS")
fi


        # Send message to all specified chat IDs
        IFS=',' read -ra CHAT_IDS <<< "${{ inputs.telegram_chat_ids }}"
        for CHAT_ID in "${CHAT_IDS[@]}"; do
          curl -s --data "chat_id=$CHAT_ID" \
          --data-urlencode "text=$MESSAGE" \
          --data "parse_mode=Markdown" \
          --data "disable_web_page_preview=true" \
          https://api.telegram.org/bot${{ inputs.telegram_bot_token }}/sendMessage
        done
